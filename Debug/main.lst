STMicroelectronics list file postprocessor v1.01   (C)2009-2024   Tue Dec 03 12:35:44 2024
Page 1  Assembler
                                               c:\users\caner\onedrive\desktop\micro\main.asm

   1                         stm8/     
   2                         
   0  000000                                 #include "mapping.inc"
   1                                                          ;-------------------------------
                                                                ;-----------------------
   2                                                          ; SEGMENT MAPPING FILE 
                                                                ;AUTOMATICALLY GENERATED BY 
                                                                ;STVD
   3                                                          ; SHOULD NOT BE MANUALLY 
                                                                ;MODIFIED.
   4                                                          ; CHANGES WILL BE LOST WHEN FILE
                                                                ; IS REGENERATED.
   5                                                          ;-------------------------------
                                                                ;-----------------------
   6  000000                                 #define  RAM0 1
   7  000000                                 #define  ram0_segment_start 0
   8  000000                                 #define  ram0_segment_end FF
   9  000000                                 #define  RAM1 1
  10  000000                                 #define  ram1_segment_start 100
  11  000000                                 #define  ram1_segment_end 5FE
  12  000000                                 #define  stack_segment_start 5FF
  13  000000                                 #define  stack_segment_end 7FF
<END_OF_INCLUSION>
   4                         
   5                                   segment  'ram0'          
   6  000000                       result_add  DS.B     1           
   7  000001                       result_sub  DS.B     1           
   8  000002                       result_and  DS.B     1           
   9  000003                       result_or  DS.B     1            
  10  000004                       result_xor  DS.B     1           
  11  000005                       result_xnor  DS.B     1
  12  000006                       result_mul  DS.B     1
  13  000007                       result_div  DS.B     1         
  14                         
  15                                   segment  'rom'
  16                         main.l    
  17                                                          ; initialize SP
  18  008080   AE07FF                        ldw      X,#stack_end
  19  008083   94                            ldw      SP,X
  20                         
  21                                                          ; Addition
  22  008084   A610                          LD       A, #$10              
  23  008086   AB20                          ADD      A, #$20             
  24  008088   C70000                        LD       result_add, A         
  25                         
  26                                                          ; Subtraction
  27  00808B   A630                          LD       A, #$30              
  28  00808D   A010                          SUB      A, #$10             
  29  00808F   C70001                        LD       result_sub, A        
  30                         
  31                                                          ; AND Operation
  32  008092   A6F0                          LD       A, #$F0              
  33  008094   A40F                          AND      A, #$0F             
  34  008096   C70002                        LD       result_and, A        
  35                         
  36                                                          ; OR Operation
  37  008099   A6F0                          LD       A, #$F0            
  38  00809B   AA0F                          OR       A, #$0F              
STMicroelectronics list file postprocessor v1.01   (C)2009-2024   Tue Dec 03 12:35:44 2024
Page 2  Assembler
                                               c:\users\caner\onedrive\desktop\micro\main.asm

  39  00809D   C70003                        LD       result_or, A         
  40                         
  41                                                          ; XOR Operation
  42  0080A0   A6AA                          LD       A, #$AA           
  43  0080A2   A855                          XOR      A, #$55             
  44  0080A4   C70004                        LD       result_xor, A       
  45                         
  46                                                          ; XNOR Operation
  47  0080A7   A6AA                          LD       A, #$AA            ;170 (10101010)   
  48  0080A9   A855                          XOR      A, #$55           ;85 (01010101)    
  49  0080AB   43                            CPL      A                   
  50  0080AC   C70005                        LD       result_xnor, A     ;Result  11111111 but we have to
                                                                ; reverse it which is 00000000  
                                                                ;  
  51                         
  52                                                          ; Multiplication by 2 (using 
                                                                ;shifting left)
  53  0080AF   A603                          LD       A, #$03              
  54  0080B1   48                            SLA      A               
  55  0080B2   C70006                        LD       result_mul, A        
  56                         
  57                                                          ; Division by 2 (using shifting 
                                                                ;right)
  58  0080B5   A610                          LD       A, #$10              
  59  0080B7   44                            SRL      A                   
  60  0080B8   C70007                        LD       result_div, A        
  61                         
  62  0080BB                                 #ifdef   1    
  63                                                          ; clear RAM0
  64  000000                       ram0_start.b  EQU      $0
  65  0000FF                       ram0_end.b  EQU      $FF
  66  0080BB   AE0000                        ldw      X,#ram0_start
  67                         clear_ram0.l  
  68  0080BE   7F                            clr      (X)
  69  0080BF   5C                            incw     X
  70  0080C0   A300FF                        cpw      X,#ram0_end    
  71  0080C3   23F9                          jrule    clear_ram0
  72  0080C5                                 #endif   
  73                         
  74  0080C5                                 #ifdef   1
  75                                                          ; clear RAM1
  76  000100                       ram1_start.w  EQU      $100
  77  0005FE                       ram1_end.w  EQU      $5FE    
  78  0080C5   AE0100                        ldw      X,#ram1_start
  79                         clear_ram1.l  
  80  0080C8   7F                            clr      (X)
  81  0080C9   5C                            incw     X
  82  0080CA   A305FE                        cpw      X,#ram1_end    
  83  0080CD   23F9                          jrule    clear_ram1
  84  0080CF                                 #endif   
  85                         
  86                                                          ; clear stack
  87  0005FF                       stack_start.w  EQU      $5FF
  88  0007FF                       stack_end.w  EQU      $7FF
  89  0080CF   AE05FF                        ldw      X,#stack_start
  90                         clear_stack.l  
  91  0080D2   7F                            clr      (X)
STMicroelectronics list file postprocessor v1.01   (C)2009-2024   Tue Dec 03 12:35:44 2024
Page 3  Assembler
                                               c:\users\caner\onedrive\desktop\micro\main.asm

  92  0080D3   5C                            incw     X
  93  0080D4   A307FF                        cpw      X,#stack_end    
  94  0080D7   23F9                          jrule    clear_stack
  95                         
  96                                                          ; Infinite loop
  97                         infinite_loop.l  
  98  0080D9   20FE                          jra      infinite_loop
  99                         
 100  0080DB                                 interrupt NonHandledInterrupt
 101                         NonHandledInterrupt.l  
 102  0080DB   80                            iret     
 103                         
 104                                   segment  'vectit'
 105  008000   82008080                      dc.l     {$82000000+main}                                   
 106  008004   820080DB                      dc.l     {$82000000+NonHandledInterrupt}      ; trap
 107  008008   820080DB                      dc.l     {$82000000+NonHandledInterrupt}      ; irq0
 108  00800C   820080DB                      dc.l     {$82000000+NonHandledInterrupt}      ; irq1
 109  008010   820080DB                      dc.l     {$82000000+NonHandledInterrupt}      ; irq2
 110  008014   820080DB                      dc.l     {$82000000+NonHandledInterrupt}      ; irq3
 111  008018   820080DB                      dc.l     {$82000000+NonHandledInterrupt}      ; irq4
 112  00801C   820080DB                      dc.l     {$82000000+NonHandledInterrupt}      ; irq5
 113  008020   820080DB                      dc.l     {$82000000+NonHandledInterrupt}      ; irq6
 114  008024   820080DB                      dc.l     {$82000000+NonHandledInterrupt}      ; irq7
 115  008028   820080DB                      dc.l     {$82000000+NonHandledInterrupt}      ; irq8
 116  00802C   820080DB                      dc.l     {$82000000+NonHandledInterrupt}      ; irq9
 117  008030   820080DB                      dc.l     {$82000000+NonHandledInterrupt}      ; irq10
 118  008034   820080DB                      dc.l     {$82000000+NonHandledInterrupt}      ; irq11
 119  008038   820080DB                      dc.l     {$82000000+NonHandledInterrupt}      ; irq12
 120  00803C   820080DB                      dc.l     {$82000000+NonHandledInterrupt}      ; irq13
 121  008040   820080DB                      dc.l     {$82000000+NonHandledInterrupt}      ; irq14
 122  008044   820080DB                      dc.l     {$82000000+NonHandledInterrupt}      ; irq15
 123  008048   820080DB                      dc.l     {$82000000+NonHandledInterrupt}      ; irq16
 124  00804C   820080DB                      dc.l     {$82000000+NonHandledInterrupt}      ; irq17
 125  008050   820080DB                      dc.l     {$82000000+NonHandledInterrupt}      ; irq18
 126  008054   820080DB                      dc.l     {$82000000+NonHandledInterrupt}      ; irq19
 127  008058   820080DB                      dc.l     {$82000000+NonHandledInterrupt}      ; irq20
 128  00805C   820080DB                      dc.l     {$82000000+NonHandledInterrupt}      ; irq21
 129  008060   820080DB                      dc.l     {$82000000+NonHandledInterrupt}      ; irq22
 130  008064   820080DB                      dc.l     {$82000000+NonHandledInterrupt}      ; irq23
 131  008068   820080DB                      dc.l     {$82000000+NonHandledInterrupt}      ; irq24
 132  00806C   820080DB                      dc.l     {$82000000+NonHandledInterrupt}      ; irq25
 133  008070   820080DB                      dc.l     {$82000000+NonHandledInterrupt}      ; irq26
 134  008074   820080DB                      dc.l     {$82000000+NonHandledInterrupt}      ; irq27
 135  008078   820080DB                      dc.l     {$82000000+NonHandledInterrupt}      ; irq28
 136  00807C   820080DB                      dc.l     {$82000000+NonHandledInterrupt}      ; irq29
 137                         
 138  008080                                 end      
STMicroelectronics list file postprocessor v1.01   (C)2009-2024   Tue Dec 03 12:35:44 2024
Page 4  Assembler
                                               c:\users\caner\onedrive\desktop\micro\main.asm

Symbol Name                       Value     Call       Type  Scope      Rel.  Line  Privacy  Segment   Size  Bytes File

NonHandledInterrupt               000080DB  interrupt  LONG  Internal   ABS    101  private  text         1     0  -

clear_ram0                        000080BE         no  LONG  Internal   ABS     67  private  text        10     0  -
clear_ram1                        000080C8         no  LONG  Internal   ABS     79  private  text        10     0  -
clear_stack                       000080D2         no  LONG  Internal   ABS     90  private  text         7     0  -

infinite_loop                     000080D9         no  LONG  Internal   ABS     97  private  text         2     0  -

main                              00008080         no  LONG  Internal   ABS     16  private  text        62     0  -

result_add                            0000         no  WORD  Internal   ABS      6  private  bss          1     1  -
result_sub                            0001         no  WORD  Internal   ABS      7  private  bss          1     1  -
result_and                            0002         no  WORD  Internal   ABS      8  private  bss          1     1  -
result_or                             0003         no  WORD  Internal   ABS      9  private  bss          1     1  -
result_xor                            0004         no  WORD  Internal   ABS     10  private  bss          1     1  -
result_xnor                           0005         no  WORD  Internal   ABS     11  private  bss          1     1  -
result_mul                            0006         no  WORD  Internal   ABS     12  private  bss          1     1  -
result_div                            0007         no  WORD  Internal   ABS     13  private  bss          1     1  -
ram0_start                              00         no  BYTE  Internal   ABS     64  private  text         0     0  -
ram0_end                                FF         no  BYTE  Internal   ABS     65  private  text         0     0  -
ram1_start                            0100         no  WORD  Internal   ABS     76  private  text         0     0  -
ram1_end                              05FE         no  WORD  Internal   ABS     77  private  text         0     0  -

stack_start                           05FF         no  WORD  Internal   ABS     87  private  text         0     0  -
stack_end                             07FF         no  WORD  Internal   ABS     88  private  text         0     0  -


20 labels
No errors on assembly of 'c:\users\caner\onedrive\desktop\micro\main.asm'